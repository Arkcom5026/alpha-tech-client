import React from "react";

const provinceToRegion = (province) => {
  if (!province) return "‡∏Å‡∏•‡∏≤‡∏á";

  const cleaned = province.replace(/^‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î\s*/i, "").trim();

  if ([
    "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£", "‡∏ô‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ", "‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£", "‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏™‡∏≤‡∏Ñ‡∏£",
    "‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤", "‡∏™‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏µ", "‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°", "‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ", "‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á",
    "‡∏ä‡∏±‡∏¢‡∏ô‡∏≤‡∏ó", "‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ"
  ].includes(cleaned)) return "‡∏Å‡∏•‡∏≤‡∏á";

  if ([
    "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà", "‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢", "‡∏•‡∏≥‡∏õ‡∏≤‡∏á", "‡∏•‡∏≥‡∏û‡∏π‡∏ô", "‡∏ô‡πà‡∏≤‡∏ô", "‡∏û‡∏∞‡πÄ‡∏¢‡∏≤",
    "‡πÅ‡∏û‡∏£‡πà", "‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô", "‡∏ï‡∏≤‡∏Å", "‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå"
  ].includes(cleaned)) return "‡πÄ‡∏´‡∏ô‡∏∑‡∏≠";

  if ([
    "‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤", "‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô", "‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°",
    "‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î", "‡∏®‡∏£‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©", "‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", "‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå", "‡πÄ‡∏•‡∏¢",
    "‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢", "‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π", "‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥", "‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£", "‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°",
    "‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå", "‡∏¢‡πÇ‡∏™‡∏ò‡∏£", "‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç", "‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£", "‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨"
  ].includes(cleaned)) return "‡∏≠‡∏µ‡∏™‡∏≤‡∏ô";

  if ([
    "‡∏ä‡∏•‡∏ö‡∏∏‡∏£‡∏µ", "‡∏£‡∏∞‡∏¢‡∏≠‡∏á", "‡∏à‡∏±‡∏ô‡∏ó‡∏ö‡∏∏‡∏£‡∏µ", "‡∏ï‡∏£‡∏≤‡∏î", "‡∏õ‡∏£‡∏≤‡∏à‡∏µ‡∏ô‡∏ö‡∏∏‡∏£‡∏µ",
    "‡∏™‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß", "‡∏â‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏ó‡∏£‡∏≤", "‡∏ô‡∏Ñ‡∏£‡∏ô‡∏≤‡∏¢‡∏Å"
  ].includes(cleaned)) return "‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å";

  if ([
    "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ", "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå", "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ",
    "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ", "‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ"
  ].includes(cleaned)) return "‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å";

  if ([
    "‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ", "‡∏™‡∏á‡∏Ç‡∏•‡∏≤", "‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä", "‡∏¢‡∏∞‡∏•‡∏≤",
    "‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ", "‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™", "‡∏ï‡∏£‡∏±‡∏á", "‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á", "‡∏™‡∏ï‡∏π‡∏•",
    "‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï", "‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà", "‡∏û‡∏±‡∏á‡∏á‡∏≤", "‡∏ä‡∏∏‡∏°‡∏û‡∏£"
  ].includes(cleaned)) return "‡πÉ‡∏ï‡πâ";

  return "‡∏Å‡∏•‡∏≤‡∏á";
};

const BranchForm = ({ formData, setFormData, onSubmit, isEdit = false, allowLocationDetect = false, submitLabel = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å" }) => {
  const handleDetectLocation = () => {
    if (!navigator.geolocation) {
      alert("‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
      return;
    }
    navigator.geolocation.getCurrentPosition(
      async (position) => {
        const lat = position.coords.latitude;
        const lng = position.coords.longitude;

        setFormData({
          ...formData,
          latitude: lat.toString(),
          longitude: lng.toString(),
        });

        try {
          const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&accept-language=th`);
          const data = await res.json();
          const address = data.address || {};

          console.log("üåç address from nominatim:", address);

          const province =
            (address.province && address.province.replace(/^‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î\s*/, '')) ||
            address.state ||
            formData.province;

          const district =
            address.town ||
            address.village ||
            formData.district;

          console.log("‚úÖ resolved district:", district);
          console.log("‚úÖ resolved province:", province);

          setFormData((prev) => ({
            ...prev,
            province,
            district,
            region: provinceToRegion(province),
          }));
        } catch (err) {
          console.warn("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏à‡∏≤‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÑ‡∏î‡πâ", err);
        }
      },
      (error) => {
        console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ", error);
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á");
      }
    );
  };

  return (
    <form onSubmit={onSubmit} className="space-y-4">
      <div>
        <label className="block text-sm font-medium mb-1">‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤</label>
        <input
          type="text"
          value={formData.name}
          onChange={(e) => setFormData({ ...formData, name: e.target.value })}
          required
          className="w-full border rounded px-3 py-2"
          disabled={isEdit} // ‚úÖ ‡πÅ‡∏¢‡∏Å‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÇ‡∏´‡∏°‡∏î Edit
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
        <textarea
          value={formData.address}
          onChange={(e) => setFormData({ ...formData, address: e.target.value })}
          rows={3}
          className="w-full border rounded px-3 py-2"
        />
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
        <input
          type="text"
          value={formData.phone}
          onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
          className="w-full border rounded px-3 py-2"
        />
      </div>

      <div className="grid grid-cols-2 gap-4">
        <div>
          <label className="block text-sm font-medium mb-1">‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</label>
          <input
            type="text"
            value={formData.district}
            onChange={(e) => setFormData({ ...formData, district: e.target.value })}
            className="w-full border rounded px-3 py-2"
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</label>
          <input
            type="text"
            value={formData.province}
            onChange={(e) => setFormData({ ...formData, province: e.target.value })}
            className="w-full border rounded px-3 py-2"
          />
        </div>
      </div>

      <div>
        <label className="block text-sm font-medium mb-1">‡∏†‡∏≤‡∏Ñ</label>
        <select
          value={formData.region}
          onChange={(e) => setFormData({ ...formData, region: e.target.value })}
          className="w-full border rounded px-3 py-2"
        >
          <option value="‡∏Å‡∏•‡∏≤‡∏á">‡∏Å‡∏•‡∏≤‡∏á</option>
          <option value="‡πÄ‡∏´‡∏ô‡∏∑‡∏≠">‡πÄ‡∏´‡∏ô‡∏∑‡∏≠</option>
          <option value="‡πÉ‡∏ï‡πâ">‡πÉ‡∏ï‡πâ</option>
          <option value="‡∏≠‡∏µ‡∏™‡∏≤‡∏ô">‡∏≠‡∏µ‡∏™‡∏≤‡∏ô</option>
          <option value="‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å">‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å</option>
          <option value="‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å">‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å</option>
        </select>
      </div>


      <div className="grid grid-cols-2 gap-4 items-end">
        <div>
          <label className="block text-sm font-medium mb-1">Latitude</label>
          <input
            type="number"
            value={formData.latitude}
            onChange={(e) => setFormData({ ...formData, latitude: e.target.value })}
            className="w-full border rounded px-3 py-2"
            disabled={!allowLocationDetect}
          />
        </div>
        <div>
          <label className="block text-sm font-medium mb-1">Longitude</label>
          <input
            type="number"
            value={formData.longitude}
            onChange={(e) => setFormData({ ...formData, longitude: e.target.value })}
            className="w-full border rounded px-3 py-2"
            disabled={!allowLocationDetect}
          />

          
        </div>
        
        <div className="flex items-center space-x-2 ">
          <input
            type="checkbox"
            id="rbac-toggle"
            checked={formData.RBACEnabled}
            onChange={(e) => setFormData({ ...formData, RBACEnabled: e.target.checked })}
          />
          <label htmlFor="rbac-toggle" className="text-sm">
            ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö RBAC (‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤)
          </label>
        </div>

        {allowLocationDetect && (
          <div className="flex items-end ">
            <button
              type="button"
              onClick={handleDetectLocation}
              className="text-sm text-green-600 px-6 py-2 border border-green-600 rounded hover:bg-green-50 min-w-[100px] "
            >
              üìç ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏Å‡∏±‡∏î
            </button>
          </div>
        )}

      </div>
      <div className="text-right">
        <button
          type="submit"
          className="bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700 min-w-[160px]"
        >
          {submitLabel}
        </button>
      </div>
    </form>
  );
};

export default BranchForm;
