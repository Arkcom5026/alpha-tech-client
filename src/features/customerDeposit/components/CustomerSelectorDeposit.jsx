import React, { useEffect, useRef, useState } from 'react';
import InputMask from 'react-input-mask';
import useCustomerStore from '@/features/customer/store/customerStore';

/**
 * Component: CustomerSelectorDeposit
 * ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
 * ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ State ‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠
 */
const CustomerSelectorDeposit = () => {
  const phoneInputRef = useRef(null);
  const [searchMode, setSearchMode] = useState('phone');
  const [phone, setPhone] = useState('');
  const [nameSearch, setNameSearch] = useState('');
  const [rawPhone, setRawPhone] = useState(''); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà

  const [customerInfo, setCustomerInfo] = useState({ name: '', email: '', address: '', customerType: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' });
  // const [isModified, setIsModified] = useState(false); // ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï

  const [searchResults, setSearchResults] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const {
    customer, // customer ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô store
    searchCustomerByPhoneAction,
    searchCustomerByNameAction,
    createCustomerAction,
    // updateCustomerProfileAction, // ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏î‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    setCustomer: setCustomerToStore,
  } = useCustomerStore();

  // Effect ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ customer ‡πÉ‡∏ô store ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
  useEffect(() => {
    if (customer) {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ customer ‡πÉ‡∏ô store, ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
      setCustomerInfo({
        name: customer.name || '',
        email: customer.email || '',
        address: customer.address || '',
        customerType: customer.customerType || '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ',
      });
      setPhone(customer.phone || '');
      // setIsModified(false); // ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏î‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•), ‡πÉ‡∏´‡πâ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
      setCustomerInfo({ name: '', email: '', address: '', customerType: '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' });
      setPhone('');
      setNameSearch('');
      setSearchResults([]);
    }
  }, [customer]);

  const handleSearch = async () => {
    setError('');
    setIsLoading(true);
    setSearchResults([]);

    try {
      if (searchMode === 'phone') {
        const cleanPhone = phone.replace(/-/g, '');
        if (!/^[0-9]{10}$/.test(cleanPhone)) {
          setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (10 ‡∏´‡∏•‡∏±‡∏Å)');
          setIsLoading(false);
          return;
        }
        setRawPhone(cleanPhone);
        await searchCustomerByPhoneAction(cleanPhone);
      } else {
        if (!nameSearch.trim()) {
          setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤');
          setIsLoading(false);
          return;
        }
        const results = await searchCustomerByNameAction(nameSearch);
        setSearchResults(results || []);
        if (!results || results.length === 0) {
          setError('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏µ‡πâ');
        }
      }
    } catch (err) {
      setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤');
      console.error(err);
    } finally {
      setIsLoading(false);
    }
  };

  const handleSelectCustomer = (cust) => {
    setCustomerToStore(cust); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ customer ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô store
    setSearchResults([]); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
  };

  const handleSave = async () => {
    const payload = { ...customerInfo };
    // ‡∏ï‡∏±‡∏î Logic ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    // if (customer?.id) { // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏°
    //   await updateCustomerProfileAction({ id: customer.id, ...payload });
    //   alert('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    //   setIsModified(false);
    // } else { // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
    const newCustomer = await createCustomerAction({ ...payload, phone: rawPhone });
    if (newCustomer) {
      setCustomerToStore(newCustomer); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô store
      alert('‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    }
    // }
  };

  const handleInfoChange = (e) => {
    const { name, value } = e.target;
    setCustomerInfo(prev => ({ ...prev, [name]: value }));
    // setIsModified(true); // ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
  };

  const handleModeChange = (mode) => {
    setSearchMode(mode);
    setPhone('');
    setNameSearch('');
    setError('');
    setSearchResults([]);
  };

  const handleClear = () => {
    // 1. ‡∏•‡πâ‡∏≤‡∏á State ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Component ‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤, ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
    setPhone('');
    setNameSearch('');
    setRawPhone('');
    setSearchResults([]);
    setError('');
    // setIsModified(false); // ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß
    // 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Action ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡πâ‡∏≤‡∏á State ‡πÉ‡∏ô Store ‡∏Å‡∏•‡∏≤‡∏á
    setCustomerToStore(null); // Set customer to null to clear it from the store
  };

  return (
    <div className="bg-white p-6 rounded-xl shadow-lg border w-full">
      <h2 className="text-2xl font-bold text-black mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h2>
      <div className="flex items-center gap-6 py-2">
        <label className="p-2 text-black text-lg cursor-pointer">
          <input type="radio" name="searchMode" checked={searchMode === 'phone'} onChange={() => handleModeChange('phone')} className="mr-2" />
          ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£
        </label>
        <label className="p-2 text-black text-lg cursor-pointer">
          <input type="radio" name="searchMode" checked={searchMode === 'name'} onChange={() => handleModeChange('name')} className="mr-2" />
          ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠
        </label>
      </div>
      <div className="flex flex-wrap items-start gap-3">
        <div className="flex-grow min-w-[250px]">
          {searchMode === 'phone' ? (
            <InputMask mask="099-999-9999" value={phone} onChange={(e) => setPhone(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSearch()}>
              {(inputProps) => <input {...inputProps} ref={phoneInputRef} type="tel" placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (0xx-xxx-xxxx)" className="border rounded-md px-3 py-2 w-full text-black text-lg" />}
            </InputMask>
          ) : (
            <input type="text" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" value={nameSearch} onChange={(e) => setNameSearch(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && handleSearch()} className="border rounded-md px-3 py-2 w-full text-black text-lg" />
          )}
        </div>
        <button onClick={handleSearch} disabled={isLoading} className="px-6 py-2 bg-green-500 text-blue-900 font-semibold rounded-md hover:bg-green-600 disabled:opacity-50 text-lg flex-shrink-0">
          {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤...' : '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤'}
        </button>
        <button onClick={handleClear} className="px-6 py-2 bg-gray-300 text-black font-semibold rounded-md hover:bg-gray-400 text-lg flex-shrink-0">
          ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </div>
      {error && <div className="bg-red-100 text-red-700 border border-red-300 px-4 py-2 rounded text-lg mt-4">‚ö†Ô∏è {error}</div>}
      
      {searchResults.length > 0 && (
        <div className="mt-4 border border-gray-300 rounded-lg p-3 text-black bg-gray-50">
          <p className="font-semibold mb-2">‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:</p>
          <ul className="space-y-1">
            {searchResults.map((cust) => (
              <li key={cust.id} onClick={() => handleSelectCustomer(cust)} className="cursor-pointer hover:bg-blue-100 p-2 rounded-md">
                {cust.name} ({cust.phone})
              </li>
            ))}
          </ul>
        </div>
      )}
      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏û‡∏ö */}
      {(!customer || (customer && !customer.id)) && (
          <div className="mt-6 pt-4 border-t-2 border-dashed text-lg text-black bg-white space-y-4">
            <p className="text-xl font-bold text-gray-800">üìã <strong>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡πÄ‡∏ö‡∏≠‡∏£‡πå: {rawPhone || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ'})</strong></p>
            <input type="text" placeholder="‡∏ä‡∏∑‡πà‡∏≠" name="name" value={customerInfo.name} onChange={handleInfoChange} className="border px-3 py-2 rounded-md w-full text-black text-base" />
            <input type="email" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏• (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)" name="email" value={customerInfo.email} onChange={handleInfoChange} className="border px-3 py-2 rounded-md w-full text-black text-base" />
            <textarea placeholder="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)" name="address" value={customerInfo.address} onChange={handleInfoChange} className="border px-3 py-2 rounded-md w-full text-black text-base" rows="3" />
            <div className="pt-2 flex justify-end">
              <button onClick={handleSave} disabled={!rawPhone || !customerInfo.name} className={`px-6 py-2 text-white font-semibold rounded-lg text-lg transition-colors ${rawPhone && customerInfo.name ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-400 cursor-not-allowed'}`}>
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
              </button>
            </div>
          </div>
      )}
      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‡∏´‡∏≤‡∏Å‡∏°‡∏µ */}
      {customer && customer.id && (
        <div className="mt-6 pt-4 border-t-2 border-dashed text-lg text-black bg-white space-y-4">
          <p className="text-xl font-bold text-gray-800">üìã <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</strong></p>
          <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {customer.name}</p>
          <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {customer.phone}</p>
          <p><strong>‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> {customer.email || '-'}</p>
          <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {customer.address || '-'}</p>
          <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</strong> {customer.customerType || '‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ'}</p>
        </div>
      )}
    </div>
  );
};

export default CustomerSelectorDeposit;
