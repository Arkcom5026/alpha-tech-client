import React, { useState } from 'react';
import useCustomerStore from '@/features/customer/store/customerStore';
import useCustomerDepositStore from '../store/customerDepositStore';

// --- üé® Sub-Component: PaymentMethodInput ---
// This component is designed to be a flexible input for various payment methods.
// It could potentially be moved to a shared components folder if reused elsewhere.
const PaymentMethodInput = ({ title, value, onChange, placeholder, disabled }) => (
  <div>
    <label className="block text-lg font-semibold text-gray-700">{title}</label>
    <input
      type="number" // Ensures numeric input
      min="0" // Prevents negative numbers
      value={value}
      onChange={e => onChange(e.target.value)}
      placeholder={placeholder}
      disabled={disabled}
      className="mt-1 w-full border rounded-md px-4 py-3 text-2xl text-right font-bold text-gray-800 disabled:bg-gray-100 disabled:cursor-not-allowed"
      onFocus={(e) => e.target.select()} // Selects all text on focus for easy editing
    />
  </div>
);

/**
 * Component: PaymentSectionDeposit
 * ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà
 * ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Sale ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
 *
 * ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:
 * - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (submitError) ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô UI
 * - ‡πÄ‡∏û‡∏¥‡πà‡∏° min="0" ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö input type="number" ‡πÉ‡∏ô PaymentMethodInput ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏•‡∏ö
 */
const PaymentSectionDeposit = () => {
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  const [cashAmount, setCashAmount] = useState('');
  const [transferAmount, setTransferAmount] = useState('');
  const [cardAmount, setCardAmount] = useState('');

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á
  const [isCashEnabled, setIsCashEnabled] = useState(true);
  const [isTransferEnabled, setIsTransferEnabled] = useState(false);
  const [isCardEnabled, setIsCardEnabled] = useState(false);

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const [submitError, setSubmitError] = useState('');

  const { customer } = useCustomerStore();
  const { createCustomerDepositAction, isSubmitting } = useCustomerDepositStore();

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const total = (Number(cashAmount) || 0) + (Number(transferAmount) || 0) + (Number(cardAmount) || 0);
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const isSubmitDisabled = !customer || total <= 0 || isSubmitting;

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥
  const handleSubmit = async () => {
    setSubmitError(''); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏Å‡πà‡∏≤
    if (isSubmitDisabled) {
      if (!customer) {
        setSubmitError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥');
      } else if (total <= 0) {
        setSubmitError('‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0');
      }
      return;
    }

    try {
      await createCustomerDepositAction({
        customerId: customer.id,
        cashAmount: isCashEnabled ? (Number(cashAmount) || 0) : 0,
        transferAmount: isTransferEnabled ? (Number(transferAmount) || 0) : 0,
        cardAmount: isCardEnabled ? (Number(cardAmount) || 0) : 0,
        totalAmount: total,
      });
      // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      setCashAmount('');
      setTransferAmount('');
      setCardAmount('');
      setIsCashEnabled(true);
      setIsTransferEnabled(false);
      setIsCardEnabled(false);
      alert('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!'); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    } catch (error) {
      console.error('Failed to submit deposit:', error);
      setSubmitError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'); // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢
    }
  };
  
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
  const formatNumber = (numStr) => {
    const number = parseFloat(numStr);
    return isNaN(number) ? '0.00' : number.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
  };

  return (
    <div className="bg-white p-6 rounded-xl shadow-lg border w-full">
      <h2 className="text-2xl font-bold text-gray-800 mb-4">‡∏£‡∏∞‡∏ö‡∏∏‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥</h2>
      
      {/* Checkbox Controls ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô */}
      <div className="flex items-center gap-6 border-b pb-4 mb-4 text-gray-700">
        <label className="flex items-center text-lg cursor-pointer">
          <input type="checkbox" checked={isCashEnabled} onChange={() => setIsCashEnabled(!isCashEnabled)} className="form-checkbox h-5 w-5 mr-2" />
          ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
        </label>
        <label className="flex items-center text-lg cursor-pointer">
          <input type="checkbox" checked={isTransferEnabled} onChange={() => setIsTransferEnabled(!isTransferEnabled)} className="form-checkbox h-5 w-5 mr-2" />
          ‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô
        </label>
        <label className="flex items-center text-lg cursor-pointer">
          <input type="checkbox" checked={isCardEnabled} onChange={() => setIsCardEnabled(!isCardEnabled)} className="form-checkbox h-5 w-5 mr-2" />
          ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
        </label>
      </div>

      {/* Grid Layout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
        {/* Payment Inputs Area (‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô) */}
        <div className="space-y-4">
          {isCashEnabled && <PaymentMethodInput title="‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î" value={cashAmount} onChange={setCashAmount} placeholder="0.00" />}
          {isTransferEnabled && <PaymentMethodInput title="‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô" value={transferAmount} onChange={setTransferAmount} placeholder="0.00" />}
          {isCardEnabled && <PaymentMethodInput title="‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï" value={cardAmount} onChange={setCardAmount} placeholder="0.00" />}
        </div>

        {/* Summary and Submit Area (‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å) */}
        <div className="md:col-span-2 bg-slate-50 p-4 rounded-lg flex flex-col justify-between">
          <div>
            <h3 className="text-xl font-bold text-gray-900 mb-3">‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î</h3>
            <div className="space-y-2 text-gray-700 text-lg">
              {isCashEnabled && <div className="flex justify-between"><span>‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î:</span> <span className="font-semibold">{formatNumber(cashAmount)}</span></div>}
              {isTransferEnabled && <div className="flex justify-between"><span>‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô:</span> <span className="font-semibold">{formatNumber(transferAmount)}</span></div>}
              {isCardEnabled && <div className="flex justify-between"><span>‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:</span> <span className="font-semibold">{formatNumber(cardAmount)}</span></div>}
            </div>
            <hr className="my-4" />
            <div className="flex justify-between items-center text-2xl font-bold text-blue-600">
                <span>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
                <span>{formatNumber(total)}</span>
            </div>
          </div>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
          {submitError && (
            <div className="bg-red-100 text-red-700 border border-red-300 px-4 py-2 rounded text-lg mt-4">
              ‚ö†Ô∏è {submitError}
            </div>
          )}
          <button
              disabled={isSubmitDisabled}
              onClick={handleSubmit}
              className="w-full mt-6 px-4 py-4 bg-blue-600 text-white font-bold text-lg rounded-lg hover:bg-blue-700 disabled:bg-gray-400 transition-all"
          >
              {isSubmitting ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : 'üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥'}
          </button>
        </div>
      </div>
    </div>
  );
};

export default PaymentSectionDeposit;
