

// ‚úÖ @filename: EmployeeForm.jsx
// ‚úÖ @folder: src/features/employee/components/

import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { useState, useEffect } from 'react';

/**
 * EmployeeForm ‚Äî ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
 * ‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå: ‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å Component
 * - ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô superadmin ‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≤‡∏Ç‡∏≤ (branchId) ‡πÑ‡∏î‡πâ ‡πÇ‡∏î‡∏¢‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡∏Ç‡∏≤‡∏ú‡πà‡∏≤‡∏ô props
 */
const EmployeeForm = ({ defaultValues = {}, onSubmit, loading, canEditBranch = false, branchOptions = [] }) => {
  // ‚úÇÔ∏è ‡∏ï‡∏±‡∏î UI/logic ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠

  const [formData, setFormData] = useState({
    name: defaultValues.name || '',
    phone: defaultValues.phone || '',
    positionId: defaultValues.positionId ? String(defaultValues.positionId) : '',
    branchId: defaultValues.branchId
      ? String(defaultValues.branchId)
      : (defaultValues.branch?.id ? String(defaultValues.branch.id) : ''),
  });

  // sync ‡πÄ‡∏°‡∏∑‡πà‡∏≠ defaultValues ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô (‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
  useEffect(() => {
    setFormData({
      name: defaultValues.name || '',
      phone: defaultValues.phone || '',
      positionId: defaultValues.positionId ? String(defaultValues.positionId) : '',
      branchId: defaultValues.branchId
        ? String(defaultValues.branchId)
        : (defaultValues.branch?.id ? String(defaultValues.branch.id) : ''),
    });
  }, [defaultValues]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    // ‡πÉ‡∏ä‡πâ browser validation ‡πÅ‡∏ó‡∏ô alert (‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô UI ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö)
    await onSubmit({
      name: formData.name.trim(),
      phone: formData.phone.trim(),
      positionId: Number(formData.positionId),
      ...(canEditBranch && formData.branchId ? { branchId: Number(formData.branchId) } : {}),
    });
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-4">
      {/* üîç ‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠ */}

      <Input
        name="name"
        placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"
        value={formData.name}
        onChange={handleChange}
        required
      />

      <Input
        name="phone"
        placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå"
        value={formData.phone}
        onChange={handleChange}
      />

      {canEditBranch && (
        <>
          <label className="text-sm font-medium">‡∏™‡∏≤‡∏Ç‡∏≤</label>
          <select
            name="branchId"
            value={formData.branchId}
            onChange={handleChange}
            required
            className="border p-2 w-full rounded text-sm"
          >
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤ --</option>
            {Array.isArray(branchOptions) && branchOptions.map((b) => (
              <option key={b.id} value={b.id}>{b.name}</option>
            ))}
          </select>
        </>
      )}

      <label className="text-sm font-medium">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
      <select
        name="positionId"
        value={formData.positionId}
        onChange={handleChange}
        required
        className="border p-2 w-full rounded text-sm"
      >
        <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á --</option>
        <option value="1">‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</option>
        <option value="2">‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏Ç‡∏≤</option>
        <option value="3">‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢</option>
        <option value="4">‡∏ä‡πà‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ</option>
        <option value="5">‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</option>
        <option value="6">‡πÅ‡∏Ñ‡∏ä‡πÄ‡∏ä‡∏µ‡∏¢‡∏£‡πå</option>
        <option value="7">‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
      </select>

      <div className="flex justify-end">
        <Button type="submit" disabled={loading || !formData.positionId}>
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'}
        </Button>
      </div>
    </form>
  );
};

export default EmployeeForm;




