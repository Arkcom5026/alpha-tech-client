// ‚úÖ purchaseOrderReceiptApi.js ‚Äî API ‡∏ù‡∏±‡πà‡∏á‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (ESM)
import apiClient from '@/utils/apiClient';

// üîé ‡∏î‡∏∂‡∏á‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏á printed ‡πÅ‡∏ö‡∏ö optional)
export const getAllReceipts = async (params = {}) => {
  try {
    const { data } = await apiClient.get('/purchase-order-receipts', { params });
    console.log("getAllReceipts :",data )
    return data;
  } catch (error) {
    console.error('‚ùå getAllReceipts error:', error);
    throw error;
  }
};

export const getReceiptById = async (id) => {
  try {
    const { data } = await apiClient.get(`/purchase-order-receipts/${id}`);
    return data;
  } catch (error) {
    console.error('‚ùå getReceiptById error:', error);
    throw error;
  }
};

export const getReceiptItemsByReceiptId = async (receiptId) => {
  try {
    const { data } = await apiClient.get(`/purchase-order-receipts/${receiptId}/items`);
    return data;
  } catch (error) {
    console.error('‚ùå getReceiptItemsByReceiptId error:', error);
    throw error;
  }
};

export const createReceipt = async (payload) => {
  try {
    const { data } = await apiClient.post('/purchase-order-receipts', payload);
    return data;
  } catch (error) {
    console.error('‚ùå createReceipt error:', error);
    throw error;
  }
};

export const updateReceipt = async (id, payload) => {
  try {
    const { data } = await apiClient.patch(`/purchase-order-receipts/${id}`, payload);
    return data;
  } catch (error) {
    console.error('‚ùå updateReceipt error:', error);
    throw error;
  }
};

export const deleteReceipt = async (id) => {
  try {
    const { data } = await apiClient.delete(`/purchase-order-receipts/${id}`);
    return data;
  } catch (error) {
    console.error('‚ùå deleteReceipt error:', error);
    throw error;
  }
};

// üö¶ ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ï‡∏≤‡∏°‡πÉ‡∏ö‡∏£‡∏±‡∏ö (‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏Å‡πà‡∏≤)
export const getReceiptBarcodeSummaries = async (params = {}) => {
  try {
    const { data } = await apiClient.get('/purchase-order-receipts/receipt-barcode-summaries', { params });
    return data;
  } catch (error) {
    console.error('‚ùå getReceiptBarcodeSummaries error:', error);
    throw error;
  }
};

// üßæ ‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡∏≥‡∏£‡∏∞
export const getReceiptsReadyToPay = async (params = {}) => {
  try {
    const { data } = await apiClient.get('/purchase-order-receipts/ready-to-pay', { params });
    return data;
  } catch (error) {
    console.error('‚ùå getReceiptsReadyToPay error:', error);
    throw error;
  }
};

// ‚úÖ ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö/‡∏à‡∏ö‡πÉ‡∏ö‡∏£‡∏±‡∏ö
export const markReceiptAsCompleted = async (receiptId) => {
  try {
    const { data } = await apiClient.patch(`/purchase-order-receipts/${receiptId}/complete`);
    return data;
  } catch (error) {
    console.error('‚ùå markReceiptAsCompleted error:', error);
    throw error;
  }
};

// ‚úÖ Finalize ‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏•‡∏∞‡∏õ‡∏¥‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞)
export const finalizeReceiptIfNeeded = async (receiptId) => {
  try {
    const { data } = await apiClient.patch(`/purchase-order-receipts/${receiptId}/finalize`);
    return data;
  } catch (error) {
    console.error('‚ùå finalizeReceiptIfNeeded error:', error);
    throw error;
  }
};

// üñ®Ô∏è ‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤ "‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡πâ‡∏ß"
export const markReceiptAsPrinted = async (receiptId) => {
  try {
    const { data } = await apiClient.patch(`/purchase-order-receipts/${receiptId}/printed`);
    return data;
  } catch (error) {
    console.error('‚ùå markReceiptAsPrinted error:', error);
    throw error;
  }
};

// üßÆ (‡∏≠‡∏≠‡∏õ‡∏ä‡∏±‡∏ô) ‡∏î‡∏∂‡∏á "‡∏™‡∏£‡∏∏‡∏õ‡πÉ‡∏ö‡∏£‡∏±‡∏ö" ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å API ‡∏´‡∏≤‡∏Å‡∏°‡∏µ endpoint ‡∏û‡∏£‡πâ‡∏≠‡∏°
// ‡∏´‡∏≤‡∏Å Back-end ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö endpoint ‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏•‡∏±‡∏ö Store ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£ normalize ‡∏ù‡∏±‡πà‡∏á FE ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
export const getReceiptSummaries = async (params = {}) => {
  try {
    const { data } = await apiClient.get('/purchase-order-receipts/summaries', { params });
    // ‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: [{id, code, purchaseOrderCode, supplier, taxInvoiceNo, receivedAt, totalItems, scannedCount, printed}]
    return data;
  } catch (error) {
    console.error('‚ùå getReceiptSummaries error:', error);
    throw error;
  }
};
