// ‚úÖ CreateReturnPage.jsx + ReturnForm.jsx (‡πÅ‡∏Å‡πâ handleSubmitReturn ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° API ‡∏à‡∏£‡∏¥‡∏á)
import { useEffect } from 'react';
import { useParams } from 'react-router-dom';
import useSaleStore from '../../sales/store/salesStore';
import useSaleReturnStore from '../store/saleReturnStore';
import ReturnForm from '../components/ReturnForm';

const CreateReturnPage = () => {
  const { saleId } = useParams();
  const { getSaleByIdAction, selectedSale } = useSaleStore();
  const { createSaleReturnAction } = useSaleReturnStore();

  useEffect(() => {
    if (saleId) {
      console.log('üì• ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å getSaleByIdAction');
      getSaleByIdAction(saleId);
    }
  }, [saleId]);

  useEffect(() => {
    console.log('üü¶ selectedSale updated:', selectedSale);
  }, [selectedSale]);

  const handleSubmitReturn = async (payload) => {
    try {
      const result = await createSaleReturnAction(saleId, payload);
      console.log('‚úÖ ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß:', result);
    } catch (err) {
      console.error('‚ùå ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
    }
  };

  return (
    <div className="p-4">
      <h1 className="text-xl font-bold mb-4">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏ö‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h1>
      <p className="mb-2">‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ö‡∏Ç‡∏≤‡∏¢: {selectedSale?.code}</p>

      {Array.isArray(selectedSale?.items) ? (
        selectedSale.items.length > 0 ? (
          <ReturnForm items={selectedSale.items} sale={selectedSale} onSubmit={handleSubmitReturn} />
        ) : (
          <div className="text-center py-6 text-gray-500">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô</div>
        )
      ) : (
        <div className="text-center py-6 text-gray-400 italic">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤...</div>
      )}
    </div>
  );
};

export default CreateReturnPage;

