import React, { useState } from 'react';
import useSalesStore from '@/features/sales/store/salesStore';
import useCustomerStore from '@/features/customer/store/customerStore';

const PaymentSection = () => {
  const {
    totalPrice,
    billDiscount,
    setBillDiscount,
    setPaymentAmount,
    paymentList,
    confirmSaleOrderAction,
    saleItems,
    cardRef,
    setCardRef,
    sumPaymentList
  } = useSalesStore();
  const { customer } = useCustomerStore();
  const [isSubmitting, setIsSubmitting] = useState(false);

  const totalOriginalPrice = Array.isArray(saleItems)
    ? saleItems.reduce((sum, item) => sum + (item.price || 0), 0)
    : 0;
  const totalDiscountOnly = Array.isArray(saleItems)
    ? saleItems.reduce((sum, item) => sum + (item.discount || 0), 0)
    : 0;
  const safeBillDiscount = typeof billDiscount === 'number' && !isNaN(billDiscount) ? billDiscount : 0;
  const totalDiscount = totalDiscountOnly + safeBillDiscount;
  const totalPriceAfterDiscount = totalOriginalPrice - totalDiscount;
  const safeFinalPrice = totalPriceAfterDiscount;
  const priceBeforeVat = safeFinalPrice / 1.07;
  const vatAmount = safeFinalPrice - priceBeforeVat;
  const safeSumPayment = typeof sumPaymentList === 'function' ? sumPaymentList() : 0;

  const totalToPay = safeFinalPrice;
  const cashAmount = Number(paymentList.find(p => p.method === 'CASH')?.amount || 0);
  const transferAmount = Number(paymentList.find(p => p.method === 'TRANSFER')?.amount || 0);
  const creditAmount = Number(paymentList.find(p => p.method === 'CREDIT')?.amount || 0);
  const totalPaid = paymentList.reduce((sum, p) => sum + (Number(p.amount) || 0), 0);
  const paidByOther = totalPaid - cashAmount;
  const remainingToPay = Math.max(totalToPay - paidByOther, 0);
  const safeChangeAmount = Math.max(cashAmount - remainingToPay, 0);
  const totalPaidNet = totalPaid - safeChangeAmount;

  const handleConfirm = async () => {
    if (!customer?.id || !saleItems.length || isSubmitting) return;
    try {
      setIsSubmitting(true);
      await confirmSaleOrderAction();
    } catch (err) {
      console.error('‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
    } finally {
      setIsSubmitting(false);
    }
  };

  const isConfirmEnabled = safeSumPayment >= safeFinalPrice && customer?.id && saleItems.length;

  const handleBillDiscountChange = (e) => {
    const newDiscount = Number(e.target.value) || 0;
    if (newDiscount <= totalOriginalPrice) {
      setBillDiscount(newDiscount);
    }
  };

  return (
    <div className="bg-white p-4 rounded-xl shadow min-w-[850px] flex flex-col-4 justify-center gap-4">

      {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
      <div className="mb-2 bg-slate-100 min-w-[250px] p-4 rounded-md space-y-1">
        <h2 className="text-lg font-semibold mb-2">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h2>
        <hr />
        <div className="flex justify-between">
          <span>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</span>
          <span>{totalOriginalPrice.toLocaleString()} ‡∏ø</span>
        </div>
        <div className="flex justify-between">
          <span>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ï‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</span>
          <span className="text-orange-500">{totalDiscountOnly.toLocaleString()} ‡∏ø</span>
        </div>
        <div className="flex justify-between items-center gap-2">
          <span>‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏¥‡∏•:</span>
          <input
            type="number"
            value={safeBillDiscount}
            onChange={handleBillDiscountChange}
            className={`w-24 px-2 py-1 text-right border rounded ${
              safeBillDiscount > totalOriginalPrice ? 'border-red-500 text-red-600' : ''
            }`}
          />
        </div>
        {safeBillDiscount > totalOriginalPrice && (
          <div className="text-red-600 text-sm mt-1 text-right">
            ‚ö†Ô∏è ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏¥‡∏•‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ({totalOriginalPrice.toLocaleString()} ‡∏ø)
          </div>
        )}
        <div className="flex justify-between">
          <span>‡∏£‡∏ß‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
          <span className="text-orange-700">üßæ {totalDiscount.toLocaleString()} ‡∏ø</span>
        </div>
        <hr />
        <div className="flex justify-between">
          <span>‡∏¢‡∏≠‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ (Net):</span>
          <span>{priceBeforeVat.toLocaleString(undefined, { maximumFractionDigits: 2 })} ‡∏ø</span>
        </div>
        <div className="flex justify-between">
          <span>Vat 7%:</span>
          <span className="text-red-600">{vatAmount.toLocaleString(undefined, { maximumFractionDigits: 2 })} ‡∏ø</span>
        </div>
        <br />
        <hr />
        <div className="text-xl font-bold text-green-700 text-right pt-2">
          ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞: {safeFinalPrice.toLocaleString()} ‡∏ø
        </div>
        <hr />

    
      </div>




      {/* ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î */}
      <div className="mb-4 min-w-[250px] bg-green-100 p-4 rounded-md">
        <h2 className="text-lg font-semibold mb-2">‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î</h2>
        <hr />
        <div className="grid grid-cols-1 gap-3 items-end">
          <div>
            <label className="block text-sm font-bold text-gray-700  ">‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î):</label>
            <input
              type="number"
              className="mt-1 w-full border rounded px-4 py-2"
              placeholder="0.00"
              value={paymentList.find(p => p.method === 'CASH')?.amount || ''}
              onChange={(e) => setPaymentAmount('CASH', e.target.value)}
            />
          </div>
          <div>
            <label className="block text-sm font-bold text-gray-700">‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</label>
            <div className="mt-1 w-full border rounded px-3 py-2 bg-gray-100 text-right">
              {safeChangeAmount.toLocaleString()} ‡∏ø
            </div>
          </div>
          <div className="text-sm text-gray-700 font-bold">
            ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢: {remainingToPay.toLocaleString()} ‡∏ø
          </div>
        </div>
      </div>

      {/* ‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô */}
      <div className="mb-4 min-w-[250px] bg-sky-200 p-4 rounded-md">
        <h2 className="text-lg font-semibold mb-2 ">‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô</h2>
        <hr />
      
        <label className="block text-sm font-bold text-gray-700 ">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô:</label>
        <input
          type="number"
          className="mt-1 w-full border rounded px-3 py-2"
          placeholder="0.00"
          value={paymentList.find(p => p.method === 'TRANSFER')?.amount || ''}
          onChange={(e) => setPaymentAmount('TRANSFER', e.target.value)}
        />
      </div>

      {/* ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï */}
      <div className="mb-4 min-w-[250px] bg-yellow-100 p-4 rounded-md">
        <h2 className="text-lg font-semibold mb-2">‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</h2>
        <hr />
        <label className="block text-sm font-bold text-gray-700">‡∏¢‡∏≠‡∏î‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:</label>
        <input
          type="number"
          className="mt-1 w-full border rounded px-3 py-2"
          placeholder="0.00"
          value={paymentList.find(p => p.method === 'CREDIT')?.amount || ''}
          onChange={(e) => setPaymentAmount('CREDIT', e.target.value)}
        />
        <label className="text-sm mt-2 block font-bold">‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:</label>
        <input
          type="text"
          value={cardRef}
          onChange={(e) => setCardRef(e.target.value)}
          className="border rounded p-1 w-full mt-1"
          placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏π‡∏î‡∏ö‡∏±‡∏ï‡∏£"
          maxLength={24}
        />
      </div>

      {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î + ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô */}
      <div className="mb-4 min-w-[250px] bg-lime-100 p-3 rounded flex flex-col justify-between h-full">
        <div>
          <h2 className="text-lg font-semibold mb-2">‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î</h2>
          <hr />
          <div className="text-sm text-gray-700 mt-2">
            <div className="flex justify-between">
              <span className='font-bold'>‡∏¢‡∏≠‡∏î‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞:</span>
              <span className='text-blue-600'>  {safeFinalPrice.toLocaleString()} ‡∏ø </span>
            </div>
            <hr />

            <div className="flex justify-between">
              <span className='font-bold'>‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î:</span>
              <span className='text-green-600'> {cashAmount.toLocaleString()} ‡∏ø </span>
            </div>

            <div className="flex justify-between">
              <span className='font-bold'>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</span>
              <span className='text-red-600'> {safeChangeAmount.toLocaleString()} ‡∏ø </span>
            </div>
            <hr />

            <div className="flex justify-between">
              <span className='font-bold'>‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô:</span>              
              <span> {transferAmount.toLocaleString()} ‡∏ø </span>
            </div>

            <div className="flex justify-between">
              <span className='font-bold'>‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï:</span>
              <span> {creditAmount.toLocaleString()} ‡∏ø </span>
            </div>
            <hr />
            <br />

            <div className="flex justify-between font-semibold text-base">
              <span className='font-bold'>‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</span>
              <span className={totalPaidNet === safeFinalPrice ? 'text-green-600' : 'text-red-600'}>
                {totalPaidNet.toLocaleString(undefined, { maximumFractionDigits: 2 })} ‡∏ø
              </span>
            </div>

            <div
              className={`mt-2 p-2 rounded text-center font-semibold
                ${totalPaidNet === safeFinalPrice ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}
            >
              {totalPaidNet === safeFinalPrice
                ? '‚úÖ ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢'
                : '‚ö†Ô∏è ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞'}
            </div>
          </div>

          <div className="text-center pt-4 mt-auto">
            <button
              onClick={handleConfirm}
              disabled={!isConfirmEnabled}
              className="px-6 py-3 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50"
            >
              ‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PaymentSection;
