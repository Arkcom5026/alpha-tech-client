// PaymentSection component (Refactored to use sub-components)
import React, { useState, useEffect, useCallback } from 'react';
import useSalesStore from '@/features/sales/store/salesStore';
import useCustomerDepositStore from '@/features/customerDeposit/store/customerDepositStore';
import usePaymentStore from '@/features/payment/store/paymentStore';
import { useNavigate } from 'react-router-dom';

// Import Components ‡∏¢‡πà‡∏≠‡∏¢‡πÜ ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà
import PaymentSummary from './PaymentSummary';
import PaymentMethodInput from './PaymentMethodInput';
import CalculationDetails from './CalculationDetails';
import BillPrintOptions from './BillPrintOptions';

// ‚ú® ‡∏£‡∏±‡∏ö onSaleModeChange ‡πÅ‡∏•‡∏∞ currentSaleMode ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
const PaymentSection = ({ saleItems, onConfirm, isSubmitting, setIsSubmitting, onSaleConfirmed, setClearPhoneTrigger, onSaleModeChange, currentSaleMode }) => {
  const navigate = useNavigate();

  const {
    billDiscount,
    setBillDiscount,
    setPaymentAmount, // ‚ú® ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ setPaymentAmount ‡∏à‡∏≤‡∏Å useSalesStore
    paymentList,
    confirmSaleOrderAction,
    cardRef,
    setCardRef,
    resetSaleOrderAction,
    setCustomerIdAction,
  } = useSalesStore();

  const { submitMultiPaymentAction } = usePaymentStore();
  const {
    customerDepositAmount,
    selectedCustomer,
    selectedDeposit,
    depositUsed,
    setDepositUsed,
    applyDepositUsageAction,
    clearCustomerAndDeposit,
  } = useCustomerDepositStore();

  const [saleOption, setSaleOption] = useState('NONE'); // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏¥‡∏•
  const [paymentMethods, setPaymentMethods] = useState({
    cash: true,
    transfer: false,
    credit: false,
    agencyCredit: false, // ‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô
  });
  const [paymentError, setPaymentError] = useState(''); // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô

  const handleToggle = useCallback((method) => {
    setPaymentMethods(prev => {
      const newState = { ...prev, [method]: !prev[method] };

      if (method === 'agencyCredit') {
        if (newState.agencyCredit) {
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ saleMode ‡πÄ‡∏õ‡πá‡∏ô CREDIT ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏∑‡πà‡∏ô
          onSaleModeChange('CREDIT');
          setPaymentAmount('CASH', 0); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
          setPaymentAmount('TRANSFER', 0); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô
          setPaymentAmount('CREDIT', 0); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
          setCardRef(''); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ö‡∏±‡∏ï‡∏£
          return { cash: false, transfer: false, credit: false, agencyCredit: true };
        } else {
          // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà CASH mode ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
          onSaleModeChange('CASH');
          return { cash: true, transfer: false, credit: false, agencyCredit: false };
        }
      } else {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏∑‡πà‡∏ô
        if (newState[method]) { // ‡∏ñ‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          // ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ saleMode ‡πÄ‡∏õ‡πá‡∏ô CASH
          if (newState.agencyCredit) {
            newState.agencyCredit = false;
            onSaleModeChange('CASH');
          }
        }
        return newState;
      }
    });
  }, [onSaleModeChange, setPaymentAmount, setCardRef]); // ‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏° setPaymentAmount, setCardRef ‡πÉ‡∏ô dependency array

  const effectiveCustomer = selectedCustomer || { id: null, name: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' }; // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
  const validSaleItems = Array.isArray(saleItems) ? saleItems : []; // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Array
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
  const totalOriginalPrice = validSaleItems.reduce((sum, item) => sum + (item.price || 0), 0);
  const totalDiscountOnly = validSaleItems.reduce((sum, item) => sum + (item.discountWithoutBill || 0), 0);
  const safeBillDiscount = typeof billDiscount === 'number' && !isNaN(billDiscount) ? billDiscount : 0;
  const totalDiscount = totalDiscountOnly + safeBillDiscount;
  const safeFinalPrice = Math.max(totalOriginalPrice - totalDiscountOnly - safeBillDiscount, 0);

  useEffect(() => {
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ
    const suggested = Math.min(customerDepositAmount, safeFinalPrice);
    setDepositUsed(suggested);
  }, [customerDepositAmount, safeFinalPrice, setDepositUsed]); // ‡πÄ‡∏û‡∏¥‡πà‡∏° setDepositUsed ‡πÉ‡∏ô dependency array

  const handleDepositUsedChange = useCallback((e) => {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
    const amount = parseFloat(e.target.value) || 0;
    const safeAmount = Math.min(amount, customerDepositAmount);
    setDepositUsed(safeAmount);
  }, [customerDepositAmount, setDepositUsed]); // ‡πÄ‡∏û‡∏¥‡πà‡∏° setDepositUsed ‡πÉ‡∏ô dependency array

  const priceBeforeVat = safeFinalPrice / 1.07; // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏©‡∏µ
  const vatAmount = safeFinalPrice - priceBeforeVat; // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏†‡∏≤‡∏©‡∏µ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°
  const safeDepositUsed = Math.min(depositUsed, safeFinalPrice); // ‡∏¢‡∏≠‡∏î‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞)
  const totalToPay = safeFinalPrice; // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞

  // ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á
  const cashAmount = Number(paymentList.find(p => p.method === 'CASH')?.amount || 0);
  const transferAmount = Number(paymentList.find(p => p.method === 'TRANSFER')?.amount || 0);
  const creditAmount = Number(paymentList.find(p => p.method === 'CREDIT')?.amount || 0);

  // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô)
  const totalPaid = paymentList.reduce((sum, p) => {
    const amount = parseFloat(p.amount);
    return sum + (isNaN(amount) ? 0 : amount);
  }, 0);

  const paidByOther = totalPaid - cashAmount; // ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
  const remainingToPay = Math.max(totalToPay - paidByOther - safeDepositUsed, 0); // ‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
  const safeChangeAmount = Math.max(cashAmount - remainingToPay, 0); // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô
  const totalPaidNet = totalPaid - safeChangeAmount; // ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏™‡∏∏‡∏ó‡∏ò‡∏¥ (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô)
  const grandTotalPaid = totalPaidNet + safeDepositUsed; // ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏ß‡∏°‡∏°‡∏±‡∏î‡∏à‡∏≥)

  // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
  const hasValidCustomerId = !!effectiveCustomer?.id;
  // ‚ú® ‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏° saleMode
  const isConfirmEnabled =
    (currentSaleMode === 'CASH' && totalPaid + safeDepositUsed >= totalToPay && safeDepositUsed <= safeFinalPrice && hasValidCustomerId && validSaleItems.length > 0) ||
    (currentSaleMode === 'CREDIT' && hasValidCustomerId && validSaleItems.length > 0);


  const handleConfirm = useCallback(async () => {
    setPaymentError(''); // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Error ‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
    console.log('üîç safeDepositUsed:', safeDepositUsed);
    console.log('üîç selectedDeposit?.id:', selectedDeposit?.id);
    const customerIdToUse = effectiveCustomer?.id;

    if (!hasValidCustomerId) {
      setPaymentError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢');
      return;
    }
    if (validSaleItems.length === 0) {
      setPaymentError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢');
      return;
    }
    if (isSubmitting) {
      setPaymentError('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà');
      return;
    }
    // ‚ú® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î CASH
    if (currentSaleMode === 'CASH' && totalPaid + safeDepositUsed < totalToPay) {
      setPaymentError('‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠');
      return;
    }
    if (safeBillDiscount > totalOriginalPrice) {
      setPaymentError('‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏¥‡∏•‡∏´‡πâ‡∏≤‡∏°‡πÄ‡∏Å‡∏¥‡∏ô‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤');
      return;
    }

    try {
      setIsSubmitting(true); // <--- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ setIsSubmitting ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤
      const confirmedSale = await confirmSaleOrderAction(); // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≤‡∏¢
      console.log('‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à saleId:', confirmedSale?.id);

      if (confirmedSale?.id) {
        const updatedPayments = [...paymentList];

        if (safeDepositUsed > 0 && selectedDeposit?.id) {
          updatedPayments.push({ method: 'DEPOSIT', amount: safeDepositUsed, customerDepositId: selectedDeposit.id });
          console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏ö‡∏ö DEPOSIT ‡∏•‡∏á‡πÉ‡∏ô paymentList');
        }

        // ‚ú® ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö validPayments ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î CASH
        if (currentSaleMode === 'CASH') {
          const validPayments = updatedPayments.filter(p => parseFloat(p.amount) > 0);
          if (validPayments.length === 0 && safeDepositUsed === 0) { // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ payment ‡∏´‡∏£‡∏∑‡∏≠ deposit ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô CASH
            setPaymentError("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏°‡∏±‡∏î‡∏à‡∏≥");
            return;
          }
        }


        console.log('üì§ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô...');
        await submitMultiPaymentAction({
          saleId: confirmedSale.id,
          netPaid: grandTotalPaid, // netPaid ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô CREDIT sale
          paymentList: updatedPayments,
        });
        console.log('‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

        if (safeDepositUsed > 0 && selectedDeposit?.id) {
          await applyDepositUsageAction({
            depositId: selectedDeposit.id,
            amountUsed: safeDepositUsed,
            saleId: confirmedSale.id,
          });
          console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏°‡∏±‡∏î‡∏à‡∏≥‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
        }

        // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏¥‡∏•‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        if (saleOption === 'RECEIPT') {
          navigate('/pos/sales/bill/print-short/' + confirmedSale.id, {
            state: { payment: updatedPayments }
          });
        } else if (saleOption === 'TAX_INVOICE') {
          navigate('/pos/sales/bill/print-full/' + confirmedSale.id, {
            state: { payment: updatedPayments }
          });
        } else if (saleOption === 'NONE' && currentSaleMode === 'CREDIT') {
          // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ö‡∏¥‡∏• ‡∏Å‡πá‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          navigate('/pos/sale'); // ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
        }


        if (typeof onSaleConfirmed === 'function') {
          onSaleConfirmed();
        }
      } else {
        setPaymentError('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö ID ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô');
      }
    } catch (err) {
      console.error('‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      setPaymentError('‚ùå ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ' + (err.message || '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î'));
    } finally {
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
      setTimeout(() => {
        const phoneInput = document.getElementById('customer-phone-input');
        if (phoneInput) {
          phoneInput.focus();
          phoneInput.select();
        }
      }, 100);

      setIsSubmitting(false); // <--- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ setIsSubmitting ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏°‡∏≤
      setDepositUsed(0);
      setCardRef('');
      setBillDiscount(0);
      resetSaleOrderAction?.();
      clearCustomerAndDeposit();
      setCustomerIdAction(null);
      setClearPhoneTrigger?.(Date.now());
      onSaleModeChange('CASH'); // ‚ú® ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï saleMode ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô CASH
      console.log('üßπ ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡∏≤‡∏¢‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß');
    }
  }, [
    hasValidCustomerId, validSaleItems.length, isSubmitting, totalPaid, safeDepositUsed, totalToPay, safeBillDiscount, totalOriginalPrice,
    confirmSaleOrderAction, paymentList, selectedDeposit?.id, submitMultiPaymentAction, grandTotalPaid, applyDepositUsageAction,
    saleOption, navigate, onSaleConfirmed, setDepositUsed, setCardRef, setBillDiscount, resetSaleOrderAction, clearCustomerAndDeposit,
    setCustomerIdAction, setClearPhoneTrigger, effectiveCustomer?.id, effectiveCustomer, setIsSubmitting, currentSaleMode, onSaleModeChange
  ]);


  const handleBillDiscountChange = useCallback((e) => {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏¥‡∏•
    const newDiscount = Number(e.target.value) || 0;
    // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏ö‡∏ß‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
    if (newDiscount >= 0 && newDiscount <= totalOriginalPrice) {
      setBillDiscount(newDiscount);
    } else if (newDiscount < 0) {
      setBillDiscount(0); // ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏ï‡∏¥‡∏î‡∏•‡∏ö
    }
    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á setBillDiscount ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô totalOriginalPrice ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á error message ‡πÅ‡∏ó‡∏ô
  }, [setBillDiscount, totalOriginalPrice]); // ‡πÄ‡∏û‡∏¥‡πà‡∏° setBillDiscount ‡πÉ‡∏ô dependency array

  return (
    <div className='font-bold'>
      {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞ */}
      <div className='flex justify-center mb-2 '>
        <div className="flex gap-4 p-3 bg-white   ">
          <label className="inline-flex items-center gap-2 text-gray-700 text-lg">
            <input
              type="checkbox"
              checked={paymentMethods.cash}
              onChange={() => handleToggle('cash')}
              className="form-checkbox h-5 w-5 text-green-600 rounded"
            />
            ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
          </label>
          <label className="inline-flex items-center gap-2 text-gray-700 text-lg">
            <input
              type="checkbox"
              checked={paymentMethods.transfer}
              onChange={() => handleToggle('transfer')}
              className="form-checkbox h-5 w-5 text-blue-600 rounded"
            />
            ‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô
          </label>
          <label className="inline-flex items-center gap-2 text-gray-700 text-lg">
            <input
              type="checkbox"
              checked={paymentMethods.credit}
              onChange={() => handleToggle('credit')}
              className="form-checkbox h-5 w-5 text-yellow-600 rounded"
            />
            ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
          </label>
          {/* ‚ú® ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô */}
          <label className="inline-flex items-center gap-2 text-gray-700 text-lg">
            <input
              type="checkbox"
              checked={paymentMethods.agencyCredit}
              onChange={() => handleToggle('agencyCredit')}
              className="form-checkbox h-5 w-5 text-purple-600 rounded"
            />
            ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô
          </label>
        </div>
      </div>


        <div className="bg-white  flex justify-center gap-4 py-4">

          {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1: ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì - ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏Å‡πà‡∏≠‡∏ô PaymentSummary */}
          <CalculationDetails
            totalOriginalPrice={totalOriginalPrice}
            totalDiscountOnly={totalDiscountOnly}
            billDiscount={billDiscount}
            setBillDiscount={handleBillDiscountChange} // ‡∏™‡πà‡∏á handleBillDiscountChange ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ useCallback
            totalDiscount={totalDiscount}
            priceBeforeVat={priceBeforeVat}
            vatAmount={vatAmount}
            customerDepositAmount={customerDepositAmount}
            depositUsed={depositUsed}
            handleDepositUsedChange={handleDepositUsedChange} // ‡∏™‡πà‡∏á handleDepositUsedChange ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ useCallback
          />


          {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2: ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó) - ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î CASH */}
          {currentSaleMode === 'CASH' && (
            <div className="flex-1 min-w-[300px] max-w-[300px] space-y-4">
              {paymentMethods.cash && (
                <PaymentMethodInput
                  method="CASH"
                  label="‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î"
                  value={paymentList.find(p => p.method === 'CASH')?.amount || ''}
                  onChange={(e) => setPaymentAmount('CASH', e.target.value)}
                  colorClass="green"
                />
              )}
              {paymentMethods.transfer && (
                <PaymentMethodInput
                  method="TRANSFER"
                  label="‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏≠‡∏ô"
                  value={paymentList.find(p => p.method === 'TRANSFER')?.amount || ''}
                  onChange={(e) => setPaymentAmount('TRANSFER', e.target.value)}
                  colorClass="sky"
                />
              )}
              {paymentMethods.credit && (
                <PaymentMethodInput
                  method="CREDIT"
                  label="‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"
                  value={paymentList.find(p => p.method === 'CREDIT')?.amount || ''}
                  onChange={(e) => setPaymentAmount('CREDIT', e.target.value)}
                  colorClass="yellow"
                  bottomContent={
                    <div className='py-4'>
                      <label className="text-base mt-2 block font-bold text-gray-700 mb-1">‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï</label>
                      <input
                        type="text"
                        value={cardRef}
                        onChange={(e) => setCardRef(e.target.value)}
                        className="border border-gray-300 rounded-md px-3 py-2 w-full text-base text-gray-800 h-[45px] focus:ring-2 focus:ring-yellow-500 shadow-sm"
                        placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏π‡∏î‡∏ö‡∏±‡∏ï‡∏£"
                        maxLength={24}
                      />
                    </div>
                  }
                />
              )}
            </div>
          )}

          {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 3: ‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏° (‡πÄ‡∏î‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î) - ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á CalculationDetails */}
          <PaymentSummary
            totalToPay={totalToPay}
            grandTotalPaid={grandTotalPaid}
            safeChangeAmount={safeChangeAmount}
            isConfirmEnabled={isConfirmEnabled}
            isSubmitting={isSubmitting}
            onConfirm={handleConfirm}
            paymentError={paymentError}
            // ‡∏™‡πà‡∏á props ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö BillPrintOptions ‡πÑ‡∏õ‡∏¢‡∏±‡∏á PaymentSummary
            saleOption={saleOption}
            setSaleOption={setSaleOption}
            currentSaleMode={currentSaleMode} // ‚ú® ‡∏™‡πà‡∏á currentSaleMode ‡πÑ‡∏õ‡∏¢‡∏±‡∏á PaymentSummary
          />

        </div>


    </div>
  );
};

export default PaymentSection;