import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import './index.css';
import App from './App.jsx';

// ‚úÖ ‡∏•‡πâ‡∏≤‡∏á localStorage ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Å‡∏£‡∏ì‡∏µ token ‡∏´‡∏£‡∏∑‡∏≠ branch ‡∏ú‡∏¥‡∏î format ‡∏´‡∏£‡∏∑‡∏≠ decode ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ user ‡∏´‡∏•‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
try {
  const rawToken = localStorage.getItem('auth-storage');
  const rawBranch = localStorage.getItem('branch-storage');

  const hasValidToken = rawToken && JSON.parse(rawToken)?.state?.token;
  const hasValidBranch = rawBranch && JSON.parse(rawBranch)?.state?.currentBranch;

  if (!hasValidToken || !hasValidBranch) {
    localStorage.removeItem('auth-storage');
    localStorage.removeItem('branch-storage');
    console.warn('üßπ ‡∏•‡πâ‡∏≤‡∏á localStorage ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ token/branch ‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå');
  }
} catch (err) {
  console.error('‚ùå localStorage format ‡∏ú‡∏¥‡∏î ‚Üí ‡∏•‡πâ‡∏≤‡∏á‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', err);
  localStorage.removeItem('auth-storage');
  localStorage.removeItem('branch-storage');
}

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>
);
